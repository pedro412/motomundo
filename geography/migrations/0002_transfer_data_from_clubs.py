# Generated by Django 5.2.5 on 2025-08-22 18:44

from django.db import migrations


def transfer_country_state_data(apps, schema_editor):
    """Transfer Country and State data from clubs app to geography app"""
    # Get models from both apps
    ClubsCountry = apps.get_model('clubs', 'Country')
    ClubsState = apps.get_model('clubs', 'State')
    GeographyCountry = apps.get_model('geography', 'Country')
    GeographyState = apps.get_model('geography', 'State')
    
    # Transfer countries
    country_mapping = {}
    for clubs_country in ClubsCountry.objects.all():
        geo_country, created = GeographyCountry.objects.get_or_create(
            code=clubs_country.code,
            defaults={'name': clubs_country.name}
        )
        country_mapping[clubs_country.id] = geo_country
        if created:
            print(f"Transferred country: {geo_country.name}")
    
    # Transfer states
    state_mapping = {}
    for clubs_state in ClubsState.objects.all():
        geo_country = country_mapping[clubs_state.country_id]
        geo_state, created = GeographyState.objects.get_or_create(
            country=geo_country,
            name=clubs_state.name,
            defaults={'code': clubs_state.code}
        )
        state_mapping[clubs_state.id] = geo_state
        if created:
            print(f"Transferred state: {geo_state.name}")
    
    print(f"Data transfer complete: {len(country_mapping)} countries, {len(state_mapping)} states")


def reverse_transfer(apps, schema_editor):
    """Remove transferred data from geography app"""
    GeographyCountry = apps.get_model('geography', 'Country')
    GeographyState = apps.get_model('geography', 'State')
    
    GeographyState.objects.all().delete()
    GeographyCountry.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('geography', '0001_initial'),
        ('clubs', '0022_populate_mexico_states'),  # Ensure clubs data exists
    ]

    operations = [
        migrations.RunPython(
            transfer_country_state_data,
            reverse_transfer
        ),
    ]
