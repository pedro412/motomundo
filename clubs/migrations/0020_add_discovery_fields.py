# Generated by Django 5.2.5 on 2025-08-22 17:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clubs', '0019_make_club_name_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChapterJoinRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposed_chapter_name', models.CharField(help_text='Name for the proposed chapter', max_length=200)),
                ('city', models.CharField(help_text='City where the chapter will be located', max_length=100)),
                ('state', models.CharField(help_text='State where the chapter will be located', max_length=100)),
                ('description', models.TextField(help_text='Description of the proposed chapter')),
                ('reason', models.TextField(help_text='Why the user wants to join this club')),
                ('estimated_members', models.PositiveIntegerField(help_text='Estimated number of initial members')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True, help_text='Notes from admin review')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='club',
            options={'ordering': ['name']},
        ),
        migrations.AddField(
            model_name='chapter',
            name='accepts_new_members',
            field=models.BooleanField(default=True, help_text='Whether this chapter is accepting new members'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='city',
            field=models.CharField(blank=True, help_text='City where this chapter is located', max_length=100),
        ),
        migrations.AddField(
            model_name='chapter',
            name='contact_email',
            field=models.EmailField(blank=True, help_text='Contact email for this chapter', max_length=254),
        ),
        migrations.AddField(
            model_name='chapter',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this chapter is active and operational'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='is_public',
            field=models.BooleanField(default=True, help_text='Whether this chapter appears in public discovery'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='meeting_info',
            field=models.TextField(blank=True, help_text='Information about chapter meetings (time, place, etc.)'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='User who owns and manages this chapter', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_chapters', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chapter',
            name='state',
            field=models.CharField(blank=True, help_text='State where this chapter is located', max_length=100),
        ),
        migrations.AddField(
            model_name='club',
            name='accepts_new_chapters',
            field=models.BooleanField(default=True, help_text='Whether this club accepts requests for new chapters'),
        ),
        migrations.AddField(
            model_name='club',
            name='club_type',
            field=models.CharField(choices=[('mc', 'Motorcycle Club'), ('association', 'Association'), ('organization', 'Organization'), ('riding_group', 'Riding Group')], default='mc', help_text='Type of motorcycle organization', max_length=50),
        ),
        migrations.AddField(
            model_name='club',
            name='contact_email',
            field=models.EmailField(blank=True, help_text='Contact email for inquiries about joining this club', max_length=254),
        ),
        migrations.AddField(
            model_name='club',
            name='country',
            field=models.CharField(default='Mexico', max_length=100),
        ),
        migrations.AddField(
            model_name='club',
            name='founded_year',
            field=models.PositiveIntegerField(blank=True, help_text='Year the club was founded', null=True),
        ),
        migrations.AddField(
            model_name='club',
            name='is_public',
            field=models.BooleanField(default=True, help_text='Whether this club appears in public discovery'),
        ),
        migrations.AddField(
            model_name='club',
            name='primary_state',
            field=models.CharField(blank=True, help_text='Primary state where this club is located', max_length=100),
        ),
        migrations.AddField(
            model_name='club',
            name='total_chapters',
            field=models.PositiveIntegerField(default=0, help_text='Total active chapters (auto-updated)'),
        ),
        migrations.AddField(
            model_name='club',
            name='total_members',
            field=models.PositiveIntegerField(default=0, help_text='Total active members across all chapters (auto-updated)'),
        ),
        migrations.AddIndex(
            model_name='chapter',
            index=models.Index(fields=['state', 'city'], name='clubs_chapt_state_c002e6_idx'),
        ),
        migrations.AddIndex(
            model_name='chapter',
            index=models.Index(fields=['club', 'is_active'], name='clubs_chapt_club_id_1d7d7f_idx'),
        ),
        migrations.AddIndex(
            model_name='chapter',
            index=models.Index(fields=['is_public', 'is_active'], name='clubs_chapt_is_publ_5f445f_idx'),
        ),
        migrations.AddIndex(
            model_name='club',
            index=models.Index(fields=['country', 'primary_state'], name='clubs_club_country_67ec61_idx'),
        ),
        migrations.AddIndex(
            model_name='club',
            index=models.Index(fields=['club_type'], name='clubs_club_club_ty_dc6c54_idx'),
        ),
        migrations.AddIndex(
            model_name='club',
            index=models.Index(fields=['is_public'], name='clubs_club_is_publ_29a2f8_idx'),
        ),
        migrations.AddField(
            model_name='chapterjoinrequest',
            name='club',
            field=models.ForeignKey(help_text='Club the user wants to create a chapter under', on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to='clubs.club'),
        ),
        migrations.AddField(
            model_name='chapterjoinrequest',
            name='requested_by',
            field=models.ForeignKey(help_text='User requesting to create the chapter', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='chapterjoinrequest',
            index=models.Index(fields=['club', 'status'], name='clubs_chapt_club_id_904ba8_idx'),
        ),
        migrations.AddIndex(
            model_name='chapterjoinrequest',
            index=models.Index(fields=['requested_by', 'status'], name='clubs_chapt_request_a0c5ba_idx'),
        ),
        migrations.AddIndex(
            model_name='chapterjoinrequest',
            index=models.Index(fields=['created_at'], name='clubs_chapt_created_4783b5_idx'),
        ),
    ]
